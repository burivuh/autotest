node("falcon") {
   pid = sh returnStdout: true, script: "ps -aux | grep \"manage.py runserver localhost:${port}\" | grep -v grep | awk '{print \$2}'"
   echo pid
   if (pid != "")
   for (def p in pid.split("\n"))
    sh "kill -9 ${p}"
   deleteDir()
    withCredentials([sshUserPrivateKey(credentialsId: 'ssh-falcon', keyFileVariable: '~/.ssh/id_rsa.pub', passphraseVariable: '', usernameVariable: '')]) {
        sh "git clone -b ${git_branch} ssh://git@bitbucket.mail.ru:2222/mauto/infrastructure.git"
    }
   
    if (new Boolean(beta)) {
       sh """sed -i 's/demo/beta/g' ./infrastructure/backend/backend/settings.py
       sed -i 's#/static/#/beta/static/#g' ./infrastructure/backend/backend/settings.py
       """
       //sh "sed -i 's=\"/static\"=\"/beta/static\"=g' ./infrastructure/backend/backend/settings.py"
       def expr = '\"\"/\"=/beta\"'
       sh "sed -i 's=\"\"=\"/beta\"=g' ./infrastructure/front/sources/models/beta.js"
    } 
   
    dir('infrastructure/front') {
        sh "npm install"
        sh "npm run build"
    }
    
    if (new Boolean(db_from_prod)) {
        copyArtifacts fingerprintArtifacts: true, flatten: true, projectName: 'at-infrastructure/autotest_backup'
        sh """
            dropdb beta
            createdb beta --owner betauser
            psql beta < demo.bak
        """
    }
   
    if (new Boolean(migrations)) {
       dir('infrastructure/backend') {
        sh "python3 manage.py migrate"
       }
    }
   
    dir('infrastructure/backend') {
        withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
            sh "nohup python3 manage.py runserver localhost:${port} > /dev/null &"
        }
    }
}