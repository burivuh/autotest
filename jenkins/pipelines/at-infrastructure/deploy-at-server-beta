node("falcon") {
   pid = sh returnStdout: true, script: "ps -aux | grep \"manage.py runserver localhost:${port}\" | grep -v grep | awk '{print \$2}'"
   echo pid
   if (pid != "")
   for (def p in pid.split("\n"))
    sh "kill -9 ${p}"
   deleteDir()
    git credentialsId: 'jenkins-github-ssh', branch: git_branch, url: 'git@github.com:mapsme/autotest.git' 

    withCredentials([usernamePassword(credentialsId: 'kkravchuk-token', passwordVariable: 'jenkins_token', usernameVariable: 'jenkins_user')]) {
   
      if (new Boolean(beta)) {
         sh """sed -i 's/demo/beta/g' ./infrastructure/backend/settings.ini
         sed -i 's#/static/#/beta/static/#g' ./infrastructure/backend/backend/settings.py
         sed -i 's#media#beta/media#g' ./infrastructure/backend/backend/settings.py
         
         """
         def expr = '\"\"/\"=/beta\"'
         sh "sed -i 's=\"\"=\"/beta\"=g' ./infrastructure/front/sources/models/beta.js"
      } 
      
      dir('infrastructure/backend') {
      def sk = sh returnStdout: true, label: '', script: '''#!/bin/bash
               python3 -m venv ./autotest
               source ./autotest/bin/activate
               pip3 install -r requirements.txt
               python3 -c \"from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\"
              '''     
      def f = sk.split("\n")[-1]
      
      sh "sed -i 's/SECRET_KEY = \'\'/SECRET_KEY = \"${f}\"/g' ./backend/settings.py"
	sh "sed -i 's/DEBUG = True/DEBUG = False/g' ./backend/settings.py"
      }
      dir('infrastructure/front') {
          sh "npm install"
          sh "npm run build"
      }
      
      if (new Boolean(db_from_prod)) {
          copyArtifacts fingerprintArtifacts: true, flatten: true, projectName: 'at-infrastructure/autotest_backup'
          sh """
              dropdb beta
              createdb beta --owner betauser
              psql beta < demo.bak
          """
      }
     
      if (new Boolean(migrations)) {
         dir('infrastructure/backend') {
         sh """#!/bin/bash
               set +x

               python3 -m venv ./autotest
               source ./autotest/bin/activate
               pip3 install -r requirements.txt
               python3 manage.py migrate
                               

              """
         }
      }
     
      dir('infrastructure/backend') {
          withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
            sh """#!/bin/bash
               set +x
               python3 -m venv ./autotest
               source ./autotest/bin/activate
               pip3 install -r requirements.txt
               nohup python3 manage.py runserver localhost:${port} > /dev/null &
                               

              """
              
          }
      }
    }
}